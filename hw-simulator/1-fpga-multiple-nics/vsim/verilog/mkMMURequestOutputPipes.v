//
// Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
//
// timestamp removed
//
// BVI format method schedule info:
// schedule methods_sglist_enq  CF ( methods_region_enq,
// 				  methods_region_notFull,
// 				  methods_idRequest_enq,
// 				  methods_idRequest_notFull,
// 				  methods_idReturn_enq,
// 				  methods_idReturn_notFull,
// 				  methods_setInterface_enq,
// 				  methods_setInterface_notFull,
// 				  portalIfc_messageSize_size,
// 				  portalIfc_indications_0_first,
// 				  portalIfc_indications_0_deq,
// 				  portalIfc_indications_1_first,
// 				  portalIfc_indications_1_deq,
// 				  portalIfc_indications_1_notEmpty,
// 				  portalIfc_indications_2_first,
// 				  portalIfc_indications_2_deq,
// 				  portalIfc_indications_2_notEmpty,
// 				  portalIfc_indications_3_first,
// 				  portalIfc_indications_3_deq,
// 				  portalIfc_indications_3_notEmpty,
// 				  portalIfc_indications_4_first,
// 				  portalIfc_indications_4_deq,
// 				  portalIfc_indications_4_notEmpty );
// schedule methods_sglist_enq  C ( methods_sglist_enq );
//
// schedule methods_sglist_notFull  CF ( methods_sglist_notFull,
// 				      methods_region_enq,
// 				      methods_region_notFull,
// 				      methods_idRequest_enq,
// 				      methods_idRequest_notFull,
// 				      methods_idReturn_enq,
// 				      methods_idReturn_notFull,
// 				      methods_setInterface_enq,
// 				      methods_setInterface_notFull,
// 				      portalIfc_messageSize_size,
// 				      portalIfc_indications_0_first,
// 				      portalIfc_indications_0_notEmpty,
// 				      portalIfc_indications_1_first,
// 				      portalIfc_indications_1_deq,
// 				      portalIfc_indications_1_notEmpty,
// 				      portalIfc_indications_2_first,
// 				      portalIfc_indications_2_deq,
// 				      portalIfc_indications_2_notEmpty,
// 				      portalIfc_indications_3_first,
// 				      portalIfc_indications_3_deq,
// 				      portalIfc_indications_3_notEmpty,
// 				      portalIfc_indications_4_first,
// 				      portalIfc_indications_4_deq,
// 				      portalIfc_indications_4_notEmpty,
// 				      portalIfc_intr_status,
// 				      portalIfc_intr_channel );
// schedule methods_sglist_notFull  SB ( methods_sglist_enq,
// 				      portalIfc_indications_0_deq );
//
// schedule methods_region_enq  CF ( methods_sglist_enq,
// 				  methods_sglist_notFull,
// 				  methods_idRequest_enq,
// 				  methods_idRequest_notFull,
// 				  methods_idReturn_enq,
// 				  methods_idReturn_notFull,
// 				  methods_setInterface_enq,
// 				  methods_setInterface_notFull,
// 				  portalIfc_messageSize_size,
// 				  portalIfc_indications_0_first,
// 				  portalIfc_indications_0_deq,
// 				  portalIfc_indications_0_notEmpty,
// 				  portalIfc_indications_1_first,
// 				  portalIfc_indications_1_deq,
// 				  portalIfc_indications_2_first,
// 				  portalIfc_indications_2_deq,
// 				  portalIfc_indications_2_notEmpty,
// 				  portalIfc_indications_3_first,
// 				  portalIfc_indications_3_deq,
// 				  portalIfc_indications_3_notEmpty,
// 				  portalIfc_indications_4_first,
// 				  portalIfc_indications_4_deq,
// 				  portalIfc_indications_4_notEmpty );
// schedule methods_region_enq  C ( methods_region_enq );
//
// schedule methods_region_notFull  CF ( methods_sglist_enq,
// 				      methods_sglist_notFull,
// 				      methods_region_notFull,
// 				      methods_idRequest_enq,
// 				      methods_idRequest_notFull,
// 				      methods_idReturn_enq,
// 				      methods_idReturn_notFull,
// 				      methods_setInterface_enq,
// 				      methods_setInterface_notFull,
// 				      portalIfc_messageSize_size,
// 				      portalIfc_indications_0_first,
// 				      portalIfc_indications_0_deq,
// 				      portalIfc_indications_0_notEmpty,
// 				      portalIfc_indications_1_first,
// 				      portalIfc_indications_1_notEmpty,
// 				      portalIfc_indications_2_first,
// 				      portalIfc_indications_2_deq,
// 				      portalIfc_indications_2_notEmpty,
// 				      portalIfc_indications_3_first,
// 				      portalIfc_indications_3_deq,
// 				      portalIfc_indications_3_notEmpty,
// 				      portalIfc_indications_4_first,
// 				      portalIfc_indications_4_deq,
// 				      portalIfc_indications_4_notEmpty,
// 				      portalIfc_intr_status,
// 				      portalIfc_intr_channel );
// schedule methods_region_notFull  SB ( methods_region_enq,
// 				      portalIfc_indications_1_deq );
//
// schedule methods_idRequest_enq  CF ( methods_sglist_enq,
// 				     methods_sglist_notFull,
// 				     methods_region_enq,
// 				     methods_region_notFull,
// 				     methods_idReturn_enq,
// 				     methods_idReturn_notFull,
// 				     methods_setInterface_enq,
// 				     methods_setInterface_notFull,
// 				     portalIfc_messageSize_size,
// 				     portalIfc_indications_0_first,
// 				     portalIfc_indications_0_deq,
// 				     portalIfc_indications_0_notEmpty,
// 				     portalIfc_indications_1_first,
// 				     portalIfc_indications_1_deq,
// 				     portalIfc_indications_1_notEmpty,
// 				     portalIfc_indications_2_first,
// 				     portalIfc_indications_2_deq,
// 				     portalIfc_indications_3_first,
// 				     portalIfc_indications_3_deq,
// 				     portalIfc_indications_3_notEmpty,
// 				     portalIfc_indications_4_first,
// 				     portalIfc_indications_4_deq,
// 				     portalIfc_indications_4_notEmpty );
// schedule methods_idRequest_enq  C ( methods_idRequest_enq );
//
// schedule methods_idRequest_notFull  CF ( methods_sglist_enq,
// 					 methods_sglist_notFull,
// 					 methods_region_enq,
// 					 methods_region_notFull,
// 					 methods_idRequest_notFull,
// 					 methods_idReturn_enq,
// 					 methods_idReturn_notFull,
// 					 methods_setInterface_enq,
// 					 methods_setInterface_notFull,
// 					 portalIfc_messageSize_size,
// 					 portalIfc_indications_0_first,
// 					 portalIfc_indications_0_deq,
// 					 portalIfc_indications_0_notEmpty,
// 					 portalIfc_indications_1_first,
// 					 portalIfc_indications_1_deq,
// 					 portalIfc_indications_1_notEmpty,
// 					 portalIfc_indications_2_first,
// 					 portalIfc_indications_2_notEmpty,
// 					 portalIfc_indications_3_first,
// 					 portalIfc_indications_3_deq,
// 					 portalIfc_indications_3_notEmpty,
// 					 portalIfc_indications_4_first,
// 					 portalIfc_indications_4_deq,
// 					 portalIfc_indications_4_notEmpty,
// 					 portalIfc_intr_status,
// 					 portalIfc_intr_channel );
// schedule methods_idRequest_notFull  SB ( methods_idRequest_enq,
// 					 portalIfc_indications_2_deq );
//
// schedule methods_idReturn_enq  CF ( methods_sglist_enq,
// 				    methods_sglist_notFull,
// 				    methods_region_enq,
// 				    methods_region_notFull,
// 				    methods_idRequest_enq,
// 				    methods_idRequest_notFull,
// 				    methods_setInterface_enq,
// 				    methods_setInterface_notFull,
// 				    portalIfc_messageSize_size,
// 				    portalIfc_indications_0_first,
// 				    portalIfc_indications_0_deq,
// 				    portalIfc_indications_0_notEmpty,
// 				    portalIfc_indications_1_first,
// 				    portalIfc_indications_1_deq,
// 				    portalIfc_indications_1_notEmpty,
// 				    portalIfc_indications_2_first,
// 				    portalIfc_indications_2_deq,
// 				    portalIfc_indications_2_notEmpty,
// 				    portalIfc_indications_3_first,
// 				    portalIfc_indications_3_deq,
// 				    portalIfc_indications_4_first,
// 				    portalIfc_indications_4_deq,
// 				    portalIfc_indications_4_notEmpty );
// schedule methods_idReturn_enq  C ( methods_idReturn_enq );
//
// schedule methods_idReturn_notFull  CF ( methods_sglist_enq,
// 					methods_sglist_notFull,
// 					methods_region_enq,
// 					methods_region_notFull,
// 					methods_idRequest_enq,
// 					methods_idRequest_notFull,
// 					methods_idReturn_notFull,
// 					methods_setInterface_enq,
// 					methods_setInterface_notFull,
// 					portalIfc_messageSize_size,
// 					portalIfc_indications_0_first,
// 					portalIfc_indications_0_deq,
// 					portalIfc_indications_0_notEmpty,
// 					portalIfc_indications_1_first,
// 					portalIfc_indications_1_deq,
// 					portalIfc_indications_1_notEmpty,
// 					portalIfc_indications_2_first,
// 					portalIfc_indications_2_deq,
// 					portalIfc_indications_2_notEmpty,
// 					portalIfc_indications_3_first,
// 					portalIfc_indications_3_notEmpty,
// 					portalIfc_indications_4_first,
// 					portalIfc_indications_4_deq,
// 					portalIfc_indications_4_notEmpty,
// 					portalIfc_intr_status,
// 					portalIfc_intr_channel );
// schedule methods_idReturn_notFull  SB ( methods_idReturn_enq,
// 					portalIfc_indications_3_deq );
//
// schedule methods_setInterface_enq  CF ( methods_sglist_enq,
// 					methods_sglist_notFull,
// 					methods_region_enq,
// 					methods_region_notFull,
// 					methods_idRequest_enq,
// 					methods_idRequest_notFull,
// 					methods_idReturn_enq,
// 					methods_idReturn_notFull,
// 					portalIfc_messageSize_size,
// 					portalIfc_indications_0_first,
// 					portalIfc_indications_0_deq,
// 					portalIfc_indications_0_notEmpty,
// 					portalIfc_indications_1_first,
// 					portalIfc_indications_1_deq,
// 					portalIfc_indications_1_notEmpty,
// 					portalIfc_indications_2_first,
// 					portalIfc_indications_2_deq,
// 					portalIfc_indications_2_notEmpty,
// 					portalIfc_indications_3_first,
// 					portalIfc_indications_3_deq,
// 					portalIfc_indications_3_notEmpty,
// 					portalIfc_indications_4_first,
// 					portalIfc_indications_4_deq );
// schedule methods_setInterface_enq  C ( methods_setInterface_enq );
//
// schedule methods_setInterface_notFull  CF ( methods_sglist_enq,
// 					    methods_sglist_notFull,
// 					    methods_region_enq,
// 					    methods_region_notFull,
// 					    methods_idRequest_enq,
// 					    methods_idRequest_notFull,
// 					    methods_idReturn_enq,
// 					    methods_idReturn_notFull,
// 					    methods_setInterface_notFull,
// 					    portalIfc_messageSize_size,
// 					    portalIfc_indications_0_first,
// 					    portalIfc_indications_0_deq,
// 					    portalIfc_indications_0_notEmpty,
// 					    portalIfc_indications_1_first,
// 					    portalIfc_indications_1_deq,
// 					    portalIfc_indications_1_notEmpty,
// 					    portalIfc_indications_2_first,
// 					    portalIfc_indications_2_deq,
// 					    portalIfc_indications_2_notEmpty,
// 					    portalIfc_indications_3_first,
// 					    portalIfc_indications_3_deq,
// 					    portalIfc_indications_3_notEmpty,
// 					    portalIfc_indications_4_first,
// 					    portalIfc_indications_4_notEmpty,
// 					    portalIfc_intr_status,
// 					    portalIfc_intr_channel );
// schedule methods_setInterface_notFull  SB ( methods_setInterface_enq,
// 					    portalIfc_indications_4_deq );
//
// schedule portalIfc_messageSize_size  CF ( methods_sglist_enq,
// 					  methods_sglist_notFull,
// 					  methods_region_enq,
// 					  methods_region_notFull,
// 					  methods_idRequest_enq,
// 					  methods_idRequest_notFull,
// 					  methods_idReturn_enq,
// 					  methods_idReturn_notFull,
// 					  methods_setInterface_enq,
// 					  methods_setInterface_notFull,
// 					  portalIfc_messageSize_size,
// 					  portalIfc_indications_0_first,
// 					  portalIfc_indications_0_deq,
// 					  portalIfc_indications_0_notEmpty,
// 					  portalIfc_indications_1_first,
// 					  portalIfc_indications_1_deq,
// 					  portalIfc_indications_1_notEmpty,
// 					  portalIfc_indications_2_first,
// 					  portalIfc_indications_2_deq,
// 					  portalIfc_indications_2_notEmpty,
// 					  portalIfc_indications_3_first,
// 					  portalIfc_indications_3_deq,
// 					  portalIfc_indications_3_notEmpty,
// 					  portalIfc_indications_4_first,
// 					  portalIfc_indications_4_deq,
// 					  portalIfc_indications_4_notEmpty,
// 					  portalIfc_intr_status,
// 					  portalIfc_intr_channel );
//
// schedule portalIfc_indications_0_first  CF ( methods_sglist_enq,
// 					     methods_sglist_notFull,
// 					     methods_region_enq,
// 					     methods_region_notFull,
// 					     methods_idRequest_enq,
// 					     methods_idRequest_notFull,
// 					     methods_idReturn_enq,
// 					     methods_idReturn_notFull,
// 					     methods_setInterface_enq,
// 					     methods_setInterface_notFull,
// 					     portalIfc_messageSize_size,
// 					     portalIfc_indications_0_first,
// 					     portalIfc_indications_0_notEmpty,
// 					     portalIfc_indications_1_first,
// 					     portalIfc_indications_1_deq,
// 					     portalIfc_indications_1_notEmpty,
// 					     portalIfc_indications_2_first,
// 					     portalIfc_indications_2_deq,
// 					     portalIfc_indications_2_notEmpty,
// 					     portalIfc_indications_3_first,
// 					     portalIfc_indications_3_deq,
// 					     portalIfc_indications_3_notEmpty,
// 					     portalIfc_indications_4_first,
// 					     portalIfc_indications_4_deq,
// 					     portalIfc_indications_4_notEmpty,
// 					     portalIfc_intr_status,
// 					     portalIfc_intr_channel );
// schedule portalIfc_indications_0_first  SB ( portalIfc_indications_0_deq );
//
// schedule portalIfc_indications_0_deq  CF ( methods_sglist_enq,
// 					   methods_region_enq,
// 					   methods_region_notFull,
// 					   methods_idRequest_enq,
// 					   methods_idRequest_notFull,
// 					   methods_idReturn_enq,
// 					   methods_idReturn_notFull,
// 					   methods_setInterface_enq,
// 					   methods_setInterface_notFull,
// 					   portalIfc_messageSize_size,
// 					   portalIfc_indications_1_first,
// 					   portalIfc_indications_1_deq,
// 					   portalIfc_indications_1_notEmpty,
// 					   portalIfc_indications_2_first,
// 					   portalIfc_indications_2_deq,
// 					   portalIfc_indications_2_notEmpty,
// 					   portalIfc_indications_3_first,
// 					   portalIfc_indications_3_deq,
// 					   portalIfc_indications_3_notEmpty,
// 					   portalIfc_indications_4_first,
// 					   portalIfc_indications_4_deq,
// 					   portalIfc_indications_4_notEmpty );
// schedule portalIfc_indications_0_deq  C ( portalIfc_indications_0_deq );
//
// schedule portalIfc_indications_0_notEmpty  CF ( methods_sglist_notFull,
// 						methods_region_enq,
// 						methods_region_notFull,
// 						methods_idRequest_enq,
// 						methods_idRequest_notFull,
// 						methods_idReturn_enq,
// 						methods_idReturn_notFull,
// 						methods_setInterface_enq,
// 						methods_setInterface_notFull,
// 						portalIfc_messageSize_size,
// 						portalIfc_indications_0_first,
// 						portalIfc_indications_0_notEmpty,
// 						portalIfc_indications_1_first,
// 						portalIfc_indications_1_deq,
// 						portalIfc_indications_1_notEmpty,
// 						portalIfc_indications_2_first,
// 						portalIfc_indications_2_deq,
// 						portalIfc_indications_2_notEmpty,
// 						portalIfc_indications_3_first,
// 						portalIfc_indications_3_deq,
// 						portalIfc_indications_3_notEmpty,
// 						portalIfc_indications_4_first,
// 						portalIfc_indications_4_deq,
// 						portalIfc_indications_4_notEmpty,
// 						portalIfc_intr_status,
// 						portalIfc_intr_channel );
// schedule portalIfc_indications_0_notEmpty  SB ( methods_sglist_enq,
// 						portalIfc_indications_0_deq );
//
// schedule portalIfc_indications_1_first  CF ( methods_sglist_enq,
// 					     methods_sglist_notFull,
// 					     methods_region_enq,
// 					     methods_region_notFull,
// 					     methods_idRequest_enq,
// 					     methods_idRequest_notFull,
// 					     methods_idReturn_enq,
// 					     methods_idReturn_notFull,
// 					     methods_setInterface_enq,
// 					     methods_setInterface_notFull,
// 					     portalIfc_messageSize_size,
// 					     portalIfc_indications_0_first,
// 					     portalIfc_indications_0_deq,
// 					     portalIfc_indications_0_notEmpty,
// 					     portalIfc_indications_1_first,
// 					     portalIfc_indications_1_notEmpty,
// 					     portalIfc_indications_2_first,
// 					     portalIfc_indications_2_deq,
// 					     portalIfc_indications_2_notEmpty,
// 					     portalIfc_indications_3_first,
// 					     portalIfc_indications_3_deq,
// 					     portalIfc_indications_3_notEmpty,
// 					     portalIfc_indications_4_first,
// 					     portalIfc_indications_4_deq,
// 					     portalIfc_indications_4_notEmpty,
// 					     portalIfc_intr_status,
// 					     portalIfc_intr_channel );
// schedule portalIfc_indications_1_first  SB ( portalIfc_indications_1_deq );
//
// schedule portalIfc_indications_1_deq  CF ( methods_sglist_enq,
// 					   methods_sglist_notFull,
// 					   methods_region_enq,
// 					   methods_idRequest_enq,
// 					   methods_idRequest_notFull,
// 					   methods_idReturn_enq,
// 					   methods_idReturn_notFull,
// 					   methods_setInterface_enq,
// 					   methods_setInterface_notFull,
// 					   portalIfc_messageSize_size,
// 					   portalIfc_indications_0_first,
// 					   portalIfc_indications_0_deq,
// 					   portalIfc_indications_0_notEmpty,
// 					   portalIfc_indications_2_first,
// 					   portalIfc_indications_2_deq,
// 					   portalIfc_indications_2_notEmpty,
// 					   portalIfc_indications_3_first,
// 					   portalIfc_indications_3_deq,
// 					   portalIfc_indications_3_notEmpty,
// 					   portalIfc_indications_4_first,
// 					   portalIfc_indications_4_deq,
// 					   portalIfc_indications_4_notEmpty );
// schedule portalIfc_indications_1_deq  C ( portalIfc_indications_1_deq );
//
// schedule portalIfc_indications_1_notEmpty  CF ( methods_sglist_enq,
// 						methods_sglist_notFull,
// 						methods_region_notFull,
// 						methods_idRequest_enq,
// 						methods_idRequest_notFull,
// 						methods_idReturn_enq,
// 						methods_idReturn_notFull,
// 						methods_setInterface_enq,
// 						methods_setInterface_notFull,
// 						portalIfc_messageSize_size,
// 						portalIfc_indications_0_first,
// 						portalIfc_indications_0_deq,
// 						portalIfc_indications_0_notEmpty,
// 						portalIfc_indications_1_first,
// 						portalIfc_indications_1_notEmpty,
// 						portalIfc_indications_2_first,
// 						portalIfc_indications_2_deq,
// 						portalIfc_indications_2_notEmpty,
// 						portalIfc_indications_3_first,
// 						portalIfc_indications_3_deq,
// 						portalIfc_indications_3_notEmpty,
// 						portalIfc_indications_4_first,
// 						portalIfc_indications_4_deq,
// 						portalIfc_indications_4_notEmpty,
// 						portalIfc_intr_status,
// 						portalIfc_intr_channel );
// schedule portalIfc_indications_1_notEmpty  SB ( methods_region_enq,
// 						portalIfc_indications_1_deq );
//
// schedule portalIfc_indications_2_first  CF ( methods_sglist_enq,
// 					     methods_sglist_notFull,
// 					     methods_region_enq,
// 					     methods_region_notFull,
// 					     methods_idRequest_enq,
// 					     methods_idRequest_notFull,
// 					     methods_idReturn_enq,
// 					     methods_idReturn_notFull,
// 					     methods_setInterface_enq,
// 					     methods_setInterface_notFull,
// 					     portalIfc_messageSize_size,
// 					     portalIfc_indications_0_first,
// 					     portalIfc_indications_0_deq,
// 					     portalIfc_indications_0_notEmpty,
// 					     portalIfc_indications_1_first,
// 					     portalIfc_indications_1_deq,
// 					     portalIfc_indications_1_notEmpty,
// 					     portalIfc_indications_2_first,
// 					     portalIfc_indications_2_notEmpty,
// 					     portalIfc_indications_3_first,
// 					     portalIfc_indications_3_deq,
// 					     portalIfc_indications_3_notEmpty,
// 					     portalIfc_indications_4_first,
// 					     portalIfc_indications_4_deq,
// 					     portalIfc_indications_4_notEmpty,
// 					     portalIfc_intr_status,
// 					     portalIfc_intr_channel );
// schedule portalIfc_indications_2_first  SB ( portalIfc_indications_2_deq );
//
// schedule portalIfc_indications_2_deq  CF ( methods_sglist_enq,
// 					   methods_sglist_notFull,
// 					   methods_region_enq,
// 					   methods_region_notFull,
// 					   methods_idRequest_enq,
// 					   methods_idReturn_enq,
// 					   methods_idReturn_notFull,
// 					   methods_setInterface_enq,
// 					   methods_setInterface_notFull,
// 					   portalIfc_messageSize_size,
// 					   portalIfc_indications_0_first,
// 					   portalIfc_indications_0_deq,
// 					   portalIfc_indications_0_notEmpty,
// 					   portalIfc_indications_1_first,
// 					   portalIfc_indications_1_deq,
// 					   portalIfc_indications_1_notEmpty,
// 					   portalIfc_indications_3_first,
// 					   portalIfc_indications_3_deq,
// 					   portalIfc_indications_3_notEmpty,
// 					   portalIfc_indications_4_first,
// 					   portalIfc_indications_4_deq,
// 					   portalIfc_indications_4_notEmpty );
// schedule portalIfc_indications_2_deq  C ( portalIfc_indications_2_deq );
//
// schedule portalIfc_indications_2_notEmpty  CF ( methods_sglist_enq,
// 						methods_sglist_notFull,
// 						methods_region_enq,
// 						methods_region_notFull,
// 						methods_idRequest_notFull,
// 						methods_idReturn_enq,
// 						methods_idReturn_notFull,
// 						methods_setInterface_enq,
// 						methods_setInterface_notFull,
// 						portalIfc_messageSize_size,
// 						portalIfc_indications_0_first,
// 						portalIfc_indications_0_deq,
// 						portalIfc_indications_0_notEmpty,
// 						portalIfc_indications_1_first,
// 						portalIfc_indications_1_deq,
// 						portalIfc_indications_1_notEmpty,
// 						portalIfc_indications_2_first,
// 						portalIfc_indications_2_notEmpty,
// 						portalIfc_indications_3_first,
// 						portalIfc_indications_3_deq,
// 						portalIfc_indications_3_notEmpty,
// 						portalIfc_indications_4_first,
// 						portalIfc_indications_4_deq,
// 						portalIfc_indications_4_notEmpty,
// 						portalIfc_intr_status,
// 						portalIfc_intr_channel );
// schedule portalIfc_indications_2_notEmpty  SB ( methods_idRequest_enq,
// 						portalIfc_indications_2_deq );
//
// schedule portalIfc_indications_3_first  CF ( methods_sglist_enq,
// 					     methods_sglist_notFull,
// 					     methods_region_enq,
// 					     methods_region_notFull,
// 					     methods_idRequest_enq,
// 					     methods_idRequest_notFull,
// 					     methods_idReturn_enq,
// 					     methods_idReturn_notFull,
// 					     methods_setInterface_enq,
// 					     methods_setInterface_notFull,
// 					     portalIfc_messageSize_size,
// 					     portalIfc_indications_0_first,
// 					     portalIfc_indications_0_deq,
// 					     portalIfc_indications_0_notEmpty,
// 					     portalIfc_indications_1_first,
// 					     portalIfc_indications_1_deq,
// 					     portalIfc_indications_1_notEmpty,
// 					     portalIfc_indications_2_first,
// 					     portalIfc_indications_2_deq,
// 					     portalIfc_indications_2_notEmpty,
// 					     portalIfc_indications_3_first,
// 					     portalIfc_indications_3_notEmpty,
// 					     portalIfc_indications_4_first,
// 					     portalIfc_indications_4_deq,
// 					     portalIfc_indications_4_notEmpty,
// 					     portalIfc_intr_status,
// 					     portalIfc_intr_channel );
// schedule portalIfc_indications_3_first  SB ( portalIfc_indications_3_deq );
//
// schedule portalIfc_indications_3_deq  CF ( methods_sglist_enq,
// 					   methods_sglist_notFull,
// 					   methods_region_enq,
// 					   methods_region_notFull,
// 					   methods_idRequest_enq,
// 					   methods_idRequest_notFull,
// 					   methods_idReturn_enq,
// 					   methods_setInterface_enq,
// 					   methods_setInterface_notFull,
// 					   portalIfc_messageSize_size,
// 					   portalIfc_indications_0_first,
// 					   portalIfc_indications_0_deq,
// 					   portalIfc_indications_0_notEmpty,
// 					   portalIfc_indications_1_first,
// 					   portalIfc_indications_1_deq,
// 					   portalIfc_indications_1_notEmpty,
// 					   portalIfc_indications_2_first,
// 					   portalIfc_indications_2_deq,
// 					   portalIfc_indications_2_notEmpty,
// 					   portalIfc_indications_4_first,
// 					   portalIfc_indications_4_deq,
// 					   portalIfc_indications_4_notEmpty );
// schedule portalIfc_indications_3_deq  C ( portalIfc_indications_3_deq );
//
// schedule portalIfc_indications_3_notEmpty  CF ( methods_sglist_enq,
// 						methods_sglist_notFull,
// 						methods_region_enq,
// 						methods_region_notFull,
// 						methods_idRequest_enq,
// 						methods_idRequest_notFull,
// 						methods_idReturn_notFull,
// 						methods_setInterface_enq,
// 						methods_setInterface_notFull,
// 						portalIfc_messageSize_size,
// 						portalIfc_indications_0_first,
// 						portalIfc_indications_0_deq,
// 						portalIfc_indications_0_notEmpty,
// 						portalIfc_indications_1_first,
// 						portalIfc_indications_1_deq,
// 						portalIfc_indications_1_notEmpty,
// 						portalIfc_indications_2_first,
// 						portalIfc_indications_2_deq,
// 						portalIfc_indications_2_notEmpty,
// 						portalIfc_indications_3_first,
// 						portalIfc_indications_3_notEmpty,
// 						portalIfc_indications_4_first,
// 						portalIfc_indications_4_deq,
// 						portalIfc_indications_4_notEmpty,
// 						portalIfc_intr_status,
// 						portalIfc_intr_channel );
// schedule portalIfc_indications_3_notEmpty  SB ( methods_idReturn_enq,
// 						portalIfc_indications_3_deq );
//
// schedule portalIfc_indications_4_first  CF ( methods_sglist_enq,
// 					     methods_sglist_notFull,
// 					     methods_region_enq,
// 					     methods_region_notFull,
// 					     methods_idRequest_enq,
// 					     methods_idRequest_notFull,
// 					     methods_idReturn_enq,
// 					     methods_idReturn_notFull,
// 					     methods_setInterface_enq,
// 					     methods_setInterface_notFull,
// 					     portalIfc_messageSize_size,
// 					     portalIfc_indications_0_first,
// 					     portalIfc_indications_0_deq,
// 					     portalIfc_indications_0_notEmpty,
// 					     portalIfc_indications_1_first,
// 					     portalIfc_indications_1_deq,
// 					     portalIfc_indications_1_notEmpty,
// 					     portalIfc_indications_2_first,
// 					     portalIfc_indications_2_deq,
// 					     portalIfc_indications_2_notEmpty,
// 					     portalIfc_indications_3_first,
// 					     portalIfc_indications_3_deq,
// 					     portalIfc_indications_3_notEmpty,
// 					     portalIfc_indications_4_first,
// 					     portalIfc_indications_4_notEmpty,
// 					     portalIfc_intr_status,
// 					     portalIfc_intr_channel );
// schedule portalIfc_indications_4_first  SB ( portalIfc_indications_4_deq );
//
// schedule portalIfc_indications_4_deq  CF ( methods_sglist_enq,
// 					   methods_sglist_notFull,
// 					   methods_region_enq,
// 					   methods_region_notFull,
// 					   methods_idRequest_enq,
// 					   methods_idRequest_notFull,
// 					   methods_idReturn_enq,
// 					   methods_idReturn_notFull,
// 					   methods_setInterface_enq,
// 					   portalIfc_messageSize_size,
// 					   portalIfc_indications_0_first,
// 					   portalIfc_indications_0_deq,
// 					   portalIfc_indications_0_notEmpty,
// 					   portalIfc_indications_1_first,
// 					   portalIfc_indications_1_deq,
// 					   portalIfc_indications_1_notEmpty,
// 					   portalIfc_indications_2_first,
// 					   portalIfc_indications_2_deq,
// 					   portalIfc_indications_2_notEmpty,
// 					   portalIfc_indications_3_first,
// 					   portalIfc_indications_3_deq,
// 					   portalIfc_indications_3_notEmpty );
// schedule portalIfc_indications_4_deq  C ( portalIfc_indications_4_deq );
//
// schedule portalIfc_indications_4_notEmpty  CF ( methods_sglist_enq,
// 						methods_sglist_notFull,
// 						methods_region_enq,
// 						methods_region_notFull,
// 						methods_idRequest_enq,
// 						methods_idRequest_notFull,
// 						methods_idReturn_enq,
// 						methods_idReturn_notFull,
// 						methods_setInterface_notFull,
// 						portalIfc_messageSize_size,
// 						portalIfc_indications_0_first,
// 						portalIfc_indications_0_deq,
// 						portalIfc_indications_0_notEmpty,
// 						portalIfc_indications_1_first,
// 						portalIfc_indications_1_deq,
// 						portalIfc_indications_1_notEmpty,
// 						portalIfc_indications_2_first,
// 						portalIfc_indications_2_deq,
// 						portalIfc_indications_2_notEmpty,
// 						portalIfc_indications_3_first,
// 						portalIfc_indications_3_deq,
// 						portalIfc_indications_3_notEmpty,
// 						portalIfc_indications_4_first,
// 						portalIfc_indications_4_notEmpty,
// 						portalIfc_intr_status,
// 						portalIfc_intr_channel );
// schedule portalIfc_indications_4_notEmpty  SB ( methods_setInterface_enq,
// 						portalIfc_indications_4_deq );
//
// schedule portalIfc_intr_status  CF ( methods_sglist_notFull,
// 				     methods_region_notFull,
// 				     methods_idRequest_notFull,
// 				     methods_idReturn_notFull,
// 				     methods_setInterface_notFull,
// 				     portalIfc_messageSize_size,
// 				     portalIfc_indications_0_first,
// 				     portalIfc_indications_0_notEmpty,
// 				     portalIfc_indications_1_first,
// 				     portalIfc_indications_1_notEmpty,
// 				     portalIfc_indications_2_first,
// 				     portalIfc_indications_2_notEmpty,
// 				     portalIfc_indications_3_first,
// 				     portalIfc_indications_3_notEmpty,
// 				     portalIfc_indications_4_first,
// 				     portalIfc_indications_4_notEmpty,
// 				     portalIfc_intr_status,
// 				     portalIfc_intr_channel );
// schedule portalIfc_intr_status  SB ( methods_sglist_enq,
// 				     methods_region_enq,
// 				     methods_idRequest_enq,
// 				     methods_idReturn_enq,
// 				     methods_setInterface_enq,
// 				     portalIfc_indications_0_deq,
// 				     portalIfc_indications_1_deq,
// 				     portalIfc_indications_2_deq,
// 				     portalIfc_indications_3_deq,
// 				     portalIfc_indications_4_deq );
//
// schedule portalIfc_intr_channel  CF ( methods_sglist_notFull,
// 				      methods_region_notFull,
// 				      methods_idRequest_notFull,
// 				      methods_idReturn_notFull,
// 				      methods_setInterface_notFull,
// 				      portalIfc_messageSize_size,
// 				      portalIfc_indications_0_first,
// 				      portalIfc_indications_0_notEmpty,
// 				      portalIfc_indications_1_first,
// 				      portalIfc_indications_1_notEmpty,
// 				      portalIfc_indications_2_first,
// 				      portalIfc_indications_2_notEmpty,
// 				      portalIfc_indications_3_first,
// 				      portalIfc_indications_3_notEmpty,
// 				      portalIfc_indications_4_first,
// 				      portalIfc_indications_4_notEmpty,
// 				      portalIfc_intr_status,
// 				      portalIfc_intr_channel );
// schedule portalIfc_intr_channel  SB ( methods_sglist_enq,
// 				      methods_region_enq,
// 				      methods_idRequest_enq,
// 				      methods_idReturn_enq,
// 				      methods_setInterface_enq,
// 				      portalIfc_indications_0_deq,
// 				      portalIfc_indications_1_deq,
// 				      portalIfc_indications_2_deq,
// 				      portalIfc_indications_3_deq,
// 				      portalIfc_indications_4_deq );
//
//
// Ports:
// Name                         I/O  size props
// RDY_methods_sglist_enq         O     1
// methods_sglist_notFull         O     1
// RDY_methods_sglist_notFull     O     1 const
// RDY_methods_region_enq         O     1
// methods_region_notFull         O     1
// RDY_methods_region_notFull     O     1 const
// RDY_methods_idRequest_enq      O     1
// methods_idRequest_notFull      O     1
// RDY_methods_idRequest_notFull  O     1 const
// RDY_methods_idReturn_enq       O     1
// methods_idReturn_notFull       O     1
// RDY_methods_idReturn_notFull   O     1 const
// RDY_methods_setInterface_enq   O     1
// methods_setInterface_notFull   O     1
// RDY_methods_setInterface_notFull  O     1 const
// portalIfc_messageSize_size     O    16
// RDY_portalIfc_messageSize_size  O     1 const
// portalIfc_indications_0_first  O    32 reg
// RDY_portalIfc_indications_0_first  O     1 reg
// RDY_portalIfc_indications_0_deq  O     1 reg
// portalIfc_indications_0_notEmpty  O     1 reg
// RDY_portalIfc_indications_0_notEmpty  O     1 const
// portalIfc_indications_1_first  O    32 reg
// RDY_portalIfc_indications_1_first  O     1 reg
// RDY_portalIfc_indications_1_deq  O     1 reg
// portalIfc_indications_1_notEmpty  O     1 reg
// RDY_portalIfc_indications_1_notEmpty  O     1 const
// portalIfc_indications_2_first  O    32 reg
// RDY_portalIfc_indications_2_first  O     1 reg
// RDY_portalIfc_indications_2_deq  O     1 reg
// portalIfc_indications_2_notEmpty  O     1 reg
// RDY_portalIfc_indications_2_notEmpty  O     1 const
// portalIfc_indications_3_first  O    32 reg
// RDY_portalIfc_indications_3_first  O     1 reg
// RDY_portalIfc_indications_3_deq  O     1 reg
// portalIfc_indications_3_notEmpty  O     1 reg
// RDY_portalIfc_indications_3_notEmpty  O     1 const
// portalIfc_indications_4_first  O    32 reg
// RDY_portalIfc_indications_4_first  O     1 reg
// RDY_portalIfc_indications_4_deq  O     1 reg
// portalIfc_indications_4_notEmpty  O     1 reg
// RDY_portalIfc_indications_4_notEmpty  O     1 const
// portalIfc_intr_status          O     1
// RDY_portalIfc_intr_status      O     1 const
// portalIfc_intr_channel         O    32
// RDY_portalIfc_intr_channel     O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// methods_sglist_enq_v           I   160
// methods_region_enq_v           I   416
// methods_idRequest_enq_v        I    32 reg
// methods_idReturn_enq_v         I    32 reg
// methods_setInterface_enq_v     I    64
// portalIfc_messageSize_size_methodNumber  I    16
// EN_methods_sglist_enq          I     1
// EN_methods_region_enq          I     1
// EN_methods_idRequest_enq       I     1
// EN_methods_idReturn_enq        I     1
// EN_methods_setInterface_enq    I     1
// EN_portalIfc_indications_0_deq  I     1
// EN_portalIfc_indications_1_deq  I     1
// EN_portalIfc_indications_2_deq  I     1
// EN_portalIfc_indications_3_deq  I     1
// EN_portalIfc_indications_4_deq  I     1
//
// Combinational paths from inputs to outputs:
//   portalIfc_messageSize_size_methodNumber -> portalIfc_messageSize_size
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMURequestOutputPipes(CLK,
			       RST_N,

			       methods_sglist_enq_v,
			       EN_methods_sglist_enq,
			       RDY_methods_sglist_enq,

			       methods_sglist_notFull,
			       RDY_methods_sglist_notFull,

			       methods_region_enq_v,
			       EN_methods_region_enq,
			       RDY_methods_region_enq,

			       methods_region_notFull,
			       RDY_methods_region_notFull,

			       methods_idRequest_enq_v,
			       EN_methods_idRequest_enq,
			       RDY_methods_idRequest_enq,

			       methods_idRequest_notFull,
			       RDY_methods_idRequest_notFull,

			       methods_idReturn_enq_v,
			       EN_methods_idReturn_enq,
			       RDY_methods_idReturn_enq,

			       methods_idReturn_notFull,
			       RDY_methods_idReturn_notFull,

			       methods_setInterface_enq_v,
			       EN_methods_setInterface_enq,
			       RDY_methods_setInterface_enq,

			       methods_setInterface_notFull,
			       RDY_methods_setInterface_notFull,

			       portalIfc_messageSize_size_methodNumber,
			       portalIfc_messageSize_size,
			       RDY_portalIfc_messageSize_size,

			       portalIfc_indications_0_first,
			       RDY_portalIfc_indications_0_first,

			       EN_portalIfc_indications_0_deq,
			       RDY_portalIfc_indications_0_deq,

			       portalIfc_indications_0_notEmpty,
			       RDY_portalIfc_indications_0_notEmpty,

			       portalIfc_indications_1_first,
			       RDY_portalIfc_indications_1_first,

			       EN_portalIfc_indications_1_deq,
			       RDY_portalIfc_indications_1_deq,

			       portalIfc_indications_1_notEmpty,
			       RDY_portalIfc_indications_1_notEmpty,

			       portalIfc_indications_2_first,
			       RDY_portalIfc_indications_2_first,

			       EN_portalIfc_indications_2_deq,
			       RDY_portalIfc_indications_2_deq,

			       portalIfc_indications_2_notEmpty,
			       RDY_portalIfc_indications_2_notEmpty,

			       portalIfc_indications_3_first,
			       RDY_portalIfc_indications_3_first,

			       EN_portalIfc_indications_3_deq,
			       RDY_portalIfc_indications_3_deq,

			       portalIfc_indications_3_notEmpty,
			       RDY_portalIfc_indications_3_notEmpty,

			       portalIfc_indications_4_first,
			       RDY_portalIfc_indications_4_first,

			       EN_portalIfc_indications_4_deq,
			       RDY_portalIfc_indications_4_deq,

			       portalIfc_indications_4_notEmpty,
			       RDY_portalIfc_indications_4_notEmpty,

			       portalIfc_intr_status,
			       RDY_portalIfc_intr_status,

			       portalIfc_intr_channel,
			       RDY_portalIfc_intr_channel);
  input  CLK;
  input  RST_N;

  // action method methods_sglist_enq
  input  [159 : 0] methods_sglist_enq_v;
  input  EN_methods_sglist_enq;
  output RDY_methods_sglist_enq;

  // value method methods_sglist_notFull
  output methods_sglist_notFull;
  output RDY_methods_sglist_notFull;

  // action method methods_region_enq
  input  [415 : 0] methods_region_enq_v;
  input  EN_methods_region_enq;
  output RDY_methods_region_enq;

  // value method methods_region_notFull
  output methods_region_notFull;
  output RDY_methods_region_notFull;

  // action method methods_idRequest_enq
  input  [31 : 0] methods_idRequest_enq_v;
  input  EN_methods_idRequest_enq;
  output RDY_methods_idRequest_enq;

  // value method methods_idRequest_notFull
  output methods_idRequest_notFull;
  output RDY_methods_idRequest_notFull;

  // action method methods_idReturn_enq
  input  [31 : 0] methods_idReturn_enq_v;
  input  EN_methods_idReturn_enq;
  output RDY_methods_idReturn_enq;

  // value method methods_idReturn_notFull
  output methods_idReturn_notFull;
  output RDY_methods_idReturn_notFull;

  // action method methods_setInterface_enq
  input  [63 : 0] methods_setInterface_enq_v;
  input  EN_methods_setInterface_enq;
  output RDY_methods_setInterface_enq;

  // value method methods_setInterface_notFull
  output methods_setInterface_notFull;
  output RDY_methods_setInterface_notFull;

  // value method portalIfc_messageSize_size
  input  [15 : 0] portalIfc_messageSize_size_methodNumber;
  output [15 : 0] portalIfc_messageSize_size;
  output RDY_portalIfc_messageSize_size;

  // value method portalIfc_indications_0_first
  output [31 : 0] portalIfc_indications_0_first;
  output RDY_portalIfc_indications_0_first;

  // action method portalIfc_indications_0_deq
  input  EN_portalIfc_indications_0_deq;
  output RDY_portalIfc_indications_0_deq;

  // value method portalIfc_indications_0_notEmpty
  output portalIfc_indications_0_notEmpty;
  output RDY_portalIfc_indications_0_notEmpty;

  // value method portalIfc_indications_1_first
  output [31 : 0] portalIfc_indications_1_first;
  output RDY_portalIfc_indications_1_first;

  // action method portalIfc_indications_1_deq
  input  EN_portalIfc_indications_1_deq;
  output RDY_portalIfc_indications_1_deq;

  // value method portalIfc_indications_1_notEmpty
  output portalIfc_indications_1_notEmpty;
  output RDY_portalIfc_indications_1_notEmpty;

  // value method portalIfc_indications_2_first
  output [31 : 0] portalIfc_indications_2_first;
  output RDY_portalIfc_indications_2_first;

  // action method portalIfc_indications_2_deq
  input  EN_portalIfc_indications_2_deq;
  output RDY_portalIfc_indications_2_deq;

  // value method portalIfc_indications_2_notEmpty
  output portalIfc_indications_2_notEmpty;
  output RDY_portalIfc_indications_2_notEmpty;

  // value method portalIfc_indications_3_first
  output [31 : 0] portalIfc_indications_3_first;
  output RDY_portalIfc_indications_3_first;

  // action method portalIfc_indications_3_deq
  input  EN_portalIfc_indications_3_deq;
  output RDY_portalIfc_indications_3_deq;

  // value method portalIfc_indications_3_notEmpty
  output portalIfc_indications_3_notEmpty;
  output RDY_portalIfc_indications_3_notEmpty;

  // value method portalIfc_indications_4_first
  output [31 : 0] portalIfc_indications_4_first;
  output RDY_portalIfc_indications_4_first;

  // action method portalIfc_indications_4_deq
  input  EN_portalIfc_indications_4_deq;
  output RDY_portalIfc_indications_4_deq;

  // value method portalIfc_indications_4_notEmpty
  output portalIfc_indications_4_notEmpty;
  output RDY_portalIfc_indications_4_notEmpty;

  // value method portalIfc_intr_status
  output portalIfc_intr_status;
  output RDY_portalIfc_intr_status;

  // value method portalIfc_intr_channel
  output [31 : 0] portalIfc_intr_channel;
  output RDY_portalIfc_intr_channel;

  // signals for module outputs
  reg [15 : 0] portalIfc_messageSize_size;
  wire [31 : 0] portalIfc_indications_0_first,
		portalIfc_indications_1_first,
		portalIfc_indications_2_first,
		portalIfc_indications_3_first,
		portalIfc_indications_4_first,
		portalIfc_intr_channel;
  wire RDY_methods_idRequest_enq,
       RDY_methods_idRequest_notFull,
       RDY_methods_idReturn_enq,
       RDY_methods_idReturn_notFull,
       RDY_methods_region_enq,
       RDY_methods_region_notFull,
       RDY_methods_setInterface_enq,
       RDY_methods_setInterface_notFull,
       RDY_methods_sglist_enq,
       RDY_methods_sglist_notFull,
       RDY_portalIfc_indications_0_deq,
       RDY_portalIfc_indications_0_first,
       RDY_portalIfc_indications_0_notEmpty,
       RDY_portalIfc_indications_1_deq,
       RDY_portalIfc_indications_1_first,
       RDY_portalIfc_indications_1_notEmpty,
       RDY_portalIfc_indications_2_deq,
       RDY_portalIfc_indications_2_first,
       RDY_portalIfc_indications_2_notEmpty,
       RDY_portalIfc_indications_3_deq,
       RDY_portalIfc_indications_3_first,
       RDY_portalIfc_indications_3_notEmpty,
       RDY_portalIfc_indications_4_deq,
       RDY_portalIfc_indications_4_first,
       RDY_portalIfc_indications_4_notEmpty,
       RDY_portalIfc_intr_channel,
       RDY_portalIfc_intr_status,
       RDY_portalIfc_messageSize_size,
       methods_idRequest_notFull,
       methods_idReturn_notFull,
       methods_region_notFull,
       methods_setInterface_notFull,
       methods_sglist_notFull,
       portalIfc_indications_0_notEmpty,
       portalIfc_indications_1_notEmpty,
       portalIfc_indications_2_notEmpty,
       portalIfc_indications_3_notEmpty,
       portalIfc_indications_4_notEmpty,
       portalIfc_intr_status;

  // register idRequest_responseAdapter_bits
  reg [31 : 0] idRequest_responseAdapter_bits;
  wire [31 : 0] idRequest_responseAdapter_bits_D_IN;
  wire idRequest_responseAdapter_bits_EN;

  // register idRequest_responseAdapter_notEmptyReg
  reg idRequest_responseAdapter_notEmptyReg;
  wire idRequest_responseAdapter_notEmptyReg_D_IN,
       idRequest_responseAdapter_notEmptyReg_EN;

  // register idRequest_responseAdapter_shift
  reg [5 : 0] idRequest_responseAdapter_shift;
  wire [5 : 0] idRequest_responseAdapter_shift_D_IN;
  wire idRequest_responseAdapter_shift_EN;

  // register idReturn_responseAdapter_bits
  reg [31 : 0] idReturn_responseAdapter_bits;
  wire [31 : 0] idReturn_responseAdapter_bits_D_IN;
  wire idReturn_responseAdapter_bits_EN;

  // register idReturn_responseAdapter_notEmptyReg
  reg idReturn_responseAdapter_notEmptyReg;
  wire idReturn_responseAdapter_notEmptyReg_D_IN,
       idReturn_responseAdapter_notEmptyReg_EN;

  // register idReturn_responseAdapter_shift
  reg [5 : 0] idReturn_responseAdapter_shift;
  wire [5 : 0] idReturn_responseAdapter_shift_D_IN;
  wire idReturn_responseAdapter_shift_EN;

  // register region_responseAdapter_bits
  reg [415 : 0] region_responseAdapter_bits;
  wire [415 : 0] region_responseAdapter_bits_D_IN;
  wire region_responseAdapter_bits_EN;

  // register region_responseAdapter_count
  reg [3 : 0] region_responseAdapter_count;
  wire [3 : 0] region_responseAdapter_count_D_IN;
  wire region_responseAdapter_count_EN;

  // register region_responseAdapter_notEmptyReg
  reg region_responseAdapter_notEmptyReg;
  wire region_responseAdapter_notEmptyReg_D_IN,
       region_responseAdapter_notEmptyReg_EN;

  // register region_responseAdapter_shift
  reg [9 : 0] region_responseAdapter_shift;
  wire [9 : 0] region_responseAdapter_shift_D_IN;
  wire region_responseAdapter_shift_EN;

  // register setInterface_responseAdapter_bits
  reg [63 : 0] setInterface_responseAdapter_bits;
  wire [63 : 0] setInterface_responseAdapter_bits_D_IN;
  wire setInterface_responseAdapter_bits_EN;

  // register setInterface_responseAdapter_count
  reg setInterface_responseAdapter_count;
  wire setInterface_responseAdapter_count_D_IN,
       setInterface_responseAdapter_count_EN;

  // register setInterface_responseAdapter_notEmptyReg
  reg setInterface_responseAdapter_notEmptyReg;
  wire setInterface_responseAdapter_notEmptyReg_D_IN,
       setInterface_responseAdapter_notEmptyReg_EN;

  // register setInterface_responseAdapter_shift
  reg [6 : 0] setInterface_responseAdapter_shift;
  wire [6 : 0] setInterface_responseAdapter_shift_D_IN;
  wire setInterface_responseAdapter_shift_EN;

  // register sglist_responseAdapter_bits
  reg [159 : 0] sglist_responseAdapter_bits;
  wire [159 : 0] sglist_responseAdapter_bits_D_IN;
  wire sglist_responseAdapter_bits_EN;

  // register sglist_responseAdapter_count
  reg [2 : 0] sglist_responseAdapter_count;
  wire [2 : 0] sglist_responseAdapter_count_D_IN;
  wire sglist_responseAdapter_count_EN;

  // register sglist_responseAdapter_notEmptyReg
  reg sglist_responseAdapter_notEmptyReg;
  wire sglist_responseAdapter_notEmptyReg_D_IN,
       sglist_responseAdapter_notEmptyReg_EN;

  // register sglist_responseAdapter_shift
  reg [8 : 0] sglist_responseAdapter_shift;
  wire [8 : 0] sglist_responseAdapter_shift_D_IN;
  wire sglist_responseAdapter_shift_EN;

  // inputs to muxes for submodule ports
  wire [415 : 0] MUX_region_responseAdapter_bits_write_1__VAL_1;
  wire [159 : 0] MUX_sglist_responseAdapter_bits_write_1__VAL_1;
  wire [63 : 0] MUX_setInterface_responseAdapter_bits_write_1__VAL_1;
  wire MUX_region_responseAdapter_bits_write_1__SEL_1,
       MUX_region_responseAdapter_notEmptyReg_write_1__SEL_1,
       MUX_setInterface_responseAdapter_bits_write_1__SEL_1,
       MUX_setInterface_responseAdapter_notEmptyReg_write_1__SEL_1,
       MUX_sglist_responseAdapter_bits_write_1__SEL_1,
       MUX_sglist_responseAdapter_notEmptyReg_write_1__SEL_1;

  // remaining internal signals
  wire [31 : 0] IF_idRequest_responseAdapter_notEmptyReg_THEN__ETC___d54;
  wire [3 : 0] x__h1716;
  wire [2 : 0] x__h1556;
  wire x__h2003;

  // action method methods_sglist_enq
  assign RDY_methods_sglist_enq = !sglist_responseAdapter_notEmptyReg ;

  // value method methods_sglist_notFull
  assign methods_sglist_notFull = !sglist_responseAdapter_notEmptyReg ;
  assign RDY_methods_sglist_notFull = 1'd1 ;

  // action method methods_region_enq
  assign RDY_methods_region_enq = !region_responseAdapter_notEmptyReg ;

  // value method methods_region_notFull
  assign methods_region_notFull = !region_responseAdapter_notEmptyReg ;
  assign RDY_methods_region_notFull = 1'd1 ;

  // action method methods_idRequest_enq
  assign RDY_methods_idRequest_enq = !idRequest_responseAdapter_notEmptyReg ;

  // value method methods_idRequest_notFull
  assign methods_idRequest_notFull = !idRequest_responseAdapter_notEmptyReg ;
  assign RDY_methods_idRequest_notFull = 1'd1 ;

  // action method methods_idReturn_enq
  assign RDY_methods_idReturn_enq = !idReturn_responseAdapter_notEmptyReg ;

  // value method methods_idReturn_notFull
  assign methods_idReturn_notFull = !idReturn_responseAdapter_notEmptyReg ;
  assign RDY_methods_idReturn_notFull = 1'd1 ;

  // action method methods_setInterface_enq
  assign RDY_methods_setInterface_enq =
	     !setInterface_responseAdapter_notEmptyReg ;

  // value method methods_setInterface_notFull
  assign methods_setInterface_notFull =
	     !setInterface_responseAdapter_notEmptyReg ;
  assign RDY_methods_setInterface_notFull = 1'd1 ;

  // value method portalIfc_messageSize_size
  always@(portalIfc_messageSize_size_methodNumber)
  begin
    case (portalIfc_messageSize_size_methodNumber)
      16'd0: portalIfc_messageSize_size = 16'd160;
      16'd1: portalIfc_messageSize_size = 16'd416;
      16'd2, 16'd3: portalIfc_messageSize_size = 16'd32;
      default: portalIfc_messageSize_size = 16'd64;
    endcase
  end
  assign RDY_portalIfc_messageSize_size = 1'd1 ;

  // value method portalIfc_indications_0_first
  assign portalIfc_indications_0_first =
	     sglist_responseAdapter_bits[159:128] ;
  assign RDY_portalIfc_indications_0_first =
	     sglist_responseAdapter_notEmptyReg ;

  // action method portalIfc_indications_0_deq
  assign RDY_portalIfc_indications_0_deq =
	     sglist_responseAdapter_notEmptyReg ;

  // value method portalIfc_indications_0_notEmpty
  assign portalIfc_indications_0_notEmpty =
	     sglist_responseAdapter_notEmptyReg ;
  assign RDY_portalIfc_indications_0_notEmpty = 1'd1 ;

  // value method portalIfc_indications_1_first
  assign portalIfc_indications_1_first =
	     region_responseAdapter_bits[415:384] ;
  assign RDY_portalIfc_indications_1_first =
	     region_responseAdapter_notEmptyReg ;

  // action method portalIfc_indications_1_deq
  assign RDY_portalIfc_indications_1_deq =
	     region_responseAdapter_notEmptyReg ;

  // value method portalIfc_indications_1_notEmpty
  assign portalIfc_indications_1_notEmpty =
	     region_responseAdapter_notEmptyReg ;
  assign RDY_portalIfc_indications_1_notEmpty = 1'd1 ;

  // value method portalIfc_indications_2_first
  assign portalIfc_indications_2_first = idRequest_responseAdapter_bits ;
  assign RDY_portalIfc_indications_2_first =
	     idRequest_responseAdapter_notEmptyReg ;

  // action method portalIfc_indications_2_deq
  assign RDY_portalIfc_indications_2_deq =
	     idRequest_responseAdapter_notEmptyReg ;

  // value method portalIfc_indications_2_notEmpty
  assign portalIfc_indications_2_notEmpty =
	     idRequest_responseAdapter_notEmptyReg ;
  assign RDY_portalIfc_indications_2_notEmpty = 1'd1 ;

  // value method portalIfc_indications_3_first
  assign portalIfc_indications_3_first = idReturn_responseAdapter_bits ;
  assign RDY_portalIfc_indications_3_first =
	     idReturn_responseAdapter_notEmptyReg ;

  // action method portalIfc_indications_3_deq
  assign RDY_portalIfc_indications_3_deq =
	     idReturn_responseAdapter_notEmptyReg ;

  // value method portalIfc_indications_3_notEmpty
  assign portalIfc_indications_3_notEmpty =
	     idReturn_responseAdapter_notEmptyReg ;
  assign RDY_portalIfc_indications_3_notEmpty = 1'd1 ;

  // value method portalIfc_indications_4_first
  assign portalIfc_indications_4_first =
	     setInterface_responseAdapter_bits[63:32] ;
  assign RDY_portalIfc_indications_4_first =
	     setInterface_responseAdapter_notEmptyReg ;

  // action method portalIfc_indications_4_deq
  assign RDY_portalIfc_indications_4_deq =
	     setInterface_responseAdapter_notEmptyReg ;

  // value method portalIfc_indications_4_notEmpty
  assign portalIfc_indications_4_notEmpty =
	     setInterface_responseAdapter_notEmptyReg ;
  assign RDY_portalIfc_indications_4_notEmpty = 1'd1 ;

  // value method portalIfc_intr_status
  assign portalIfc_intr_status =
	     sglist_responseAdapter_notEmptyReg ||
	     region_responseAdapter_notEmptyReg ||
	     idRequest_responseAdapter_notEmptyReg ||
	     idReturn_responseAdapter_notEmptyReg ||
	     setInterface_responseAdapter_notEmptyReg ;
  assign RDY_portalIfc_intr_status = 1'd1 ;

  // value method portalIfc_intr_channel
  assign portalIfc_intr_channel =
	     sglist_responseAdapter_notEmptyReg ?
	       32'd0 :
	       (region_responseAdapter_notEmptyReg ?
		  32'd1 :
		  IF_idRequest_responseAdapter_notEmptyReg_THEN__ETC___d54) ;
  assign RDY_portalIfc_intr_channel = 1'd1 ;

  // inputs to muxes for submodule ports
  assign MUX_region_responseAdapter_bits_write_1__SEL_1 =
	     EN_portalIfc_indications_1_deq &&
	     region_responseAdapter_count != 4'd12 ;
  assign MUX_region_responseAdapter_notEmptyReg_write_1__SEL_1 =
	     EN_portalIfc_indications_1_deq &&
	     region_responseAdapter_count == 4'd12 ;
  assign MUX_setInterface_responseAdapter_bits_write_1__SEL_1 =
	     EN_portalIfc_indications_4_deq &&
	     !setInterface_responseAdapter_count ;
  assign MUX_setInterface_responseAdapter_notEmptyReg_write_1__SEL_1 =
	     EN_portalIfc_indications_4_deq &&
	     setInterface_responseAdapter_count ;
  assign MUX_sglist_responseAdapter_bits_write_1__SEL_1 =
	     EN_portalIfc_indications_0_deq &&
	     sglist_responseAdapter_count != 3'd4 ;
  assign MUX_sglist_responseAdapter_notEmptyReg_write_1__SEL_1 =
	     EN_portalIfc_indications_0_deq &&
	     sglist_responseAdapter_count == 3'd4 ;
  assign MUX_region_responseAdapter_bits_write_1__VAL_1 =
	     { region_responseAdapter_bits[383:0], 32'd0 } ;
  assign MUX_setInterface_responseAdapter_bits_write_1__VAL_1 =
	     { setInterface_responseAdapter_bits[31:0], 32'd0 } ;
  assign MUX_sglist_responseAdapter_bits_write_1__VAL_1 =
	     { sglist_responseAdapter_bits[127:0], 32'd0 } ;

  // register idRequest_responseAdapter_bits
  assign idRequest_responseAdapter_bits_D_IN = methods_idRequest_enq_v ;
  assign idRequest_responseAdapter_bits_EN = EN_methods_idRequest_enq ;

  // register idRequest_responseAdapter_notEmptyReg
  assign idRequest_responseAdapter_notEmptyReg_D_IN =
	     !EN_portalIfc_indications_2_deq ;
  assign idRequest_responseAdapter_notEmptyReg_EN =
	     EN_portalIfc_indications_2_deq || EN_methods_idRequest_enq ;

  // register idRequest_responseAdapter_shift
  assign idRequest_responseAdapter_shift_D_IN = 6'h0 ;
  assign idRequest_responseAdapter_shift_EN = 1'b0 ;

  // register idReturn_responseAdapter_bits
  assign idReturn_responseAdapter_bits_D_IN = methods_idReturn_enq_v ;
  assign idReturn_responseAdapter_bits_EN = EN_methods_idReturn_enq ;

  // register idReturn_responseAdapter_notEmptyReg
  assign idReturn_responseAdapter_notEmptyReg_D_IN =
	     !EN_portalIfc_indications_3_deq ;
  assign idReturn_responseAdapter_notEmptyReg_EN =
	     EN_portalIfc_indications_3_deq || EN_methods_idReturn_enq ;

  // register idReturn_responseAdapter_shift
  assign idReturn_responseAdapter_shift_D_IN = 6'h0 ;
  assign idReturn_responseAdapter_shift_EN = 1'b0 ;

  // register region_responseAdapter_bits
  assign region_responseAdapter_bits_D_IN =
	     MUX_region_responseAdapter_bits_write_1__SEL_1 ?
	       MUX_region_responseAdapter_bits_write_1__VAL_1 :
	       methods_region_enq_v ;
  assign region_responseAdapter_bits_EN =
	     EN_portalIfc_indications_1_deq &&
	     region_responseAdapter_count != 4'd12 ||
	     EN_methods_region_enq ;

  // register region_responseAdapter_count
  assign region_responseAdapter_count_D_IN =
	     (region_responseAdapter_count == 4'd12) ? 4'd0 : x__h1716 ;
  assign region_responseAdapter_count_EN = EN_portalIfc_indications_1_deq ;

  // register region_responseAdapter_notEmptyReg
  assign region_responseAdapter_notEmptyReg_D_IN =
	     !MUX_region_responseAdapter_notEmptyReg_write_1__SEL_1 ;
  assign region_responseAdapter_notEmptyReg_EN =
	     EN_portalIfc_indications_1_deq &&
	     region_responseAdapter_count == 4'd12 ||
	     EN_methods_region_enq ;

  // register region_responseAdapter_shift
  assign region_responseAdapter_shift_D_IN =
	     region_responseAdapter_shift + 10'd32 ;
  assign region_responseAdapter_shift_EN =
	     MUX_region_responseAdapter_bits_write_1__SEL_1 ;

  // register setInterface_responseAdapter_bits
  assign setInterface_responseAdapter_bits_D_IN =
	     MUX_setInterface_responseAdapter_bits_write_1__SEL_1 ?
	       MUX_setInterface_responseAdapter_bits_write_1__VAL_1 :
	       methods_setInterface_enq_v ;
  assign setInterface_responseAdapter_bits_EN =
	     EN_portalIfc_indications_4_deq &&
	     !setInterface_responseAdapter_count ||
	     EN_methods_setInterface_enq ;

  // register setInterface_responseAdapter_count
  assign setInterface_responseAdapter_count_D_IN =
	     !setInterface_responseAdapter_count && x__h2003 ;
  assign setInterface_responseAdapter_count_EN =
	     EN_portalIfc_indications_4_deq ;

  // register setInterface_responseAdapter_notEmptyReg
  assign setInterface_responseAdapter_notEmptyReg_D_IN =
	     !MUX_setInterface_responseAdapter_notEmptyReg_write_1__SEL_1 ;
  assign setInterface_responseAdapter_notEmptyReg_EN =
	     EN_portalIfc_indications_4_deq &&
	     setInterface_responseAdapter_count ||
	     EN_methods_setInterface_enq ;

  // register setInterface_responseAdapter_shift
  assign setInterface_responseAdapter_shift_D_IN =
	     setInterface_responseAdapter_shift + 7'd32 ;
  assign setInterface_responseAdapter_shift_EN =
	     MUX_setInterface_responseAdapter_bits_write_1__SEL_1 ;

  // register sglist_responseAdapter_bits
  assign sglist_responseAdapter_bits_D_IN =
	     MUX_sglist_responseAdapter_bits_write_1__SEL_1 ?
	       MUX_sglist_responseAdapter_bits_write_1__VAL_1 :
	       methods_sglist_enq_v ;
  assign sglist_responseAdapter_bits_EN =
	     EN_portalIfc_indications_0_deq &&
	     sglist_responseAdapter_count != 3'd4 ||
	     EN_methods_sglist_enq ;

  // register sglist_responseAdapter_count
  assign sglist_responseAdapter_count_D_IN =
	     (sglist_responseAdapter_count == 3'd4) ? 3'd0 : x__h1556 ;
  assign sglist_responseAdapter_count_EN = EN_portalIfc_indications_0_deq ;

  // register sglist_responseAdapter_notEmptyReg
  assign sglist_responseAdapter_notEmptyReg_D_IN =
	     !MUX_sglist_responseAdapter_notEmptyReg_write_1__SEL_1 ;
  assign sglist_responseAdapter_notEmptyReg_EN =
	     EN_portalIfc_indications_0_deq &&
	     sglist_responseAdapter_count == 3'd4 ||
	     EN_methods_sglist_enq ;

  // register sglist_responseAdapter_shift
  assign sglist_responseAdapter_shift_D_IN =
	     sglist_responseAdapter_shift + 9'd32 ;
  assign sglist_responseAdapter_shift_EN =
	     MUX_sglist_responseAdapter_bits_write_1__SEL_1 ;

  // remaining internal signals
  assign IF_idRequest_responseAdapter_notEmptyReg_THEN__ETC___d54 =
	     idRequest_responseAdapter_notEmptyReg ?
	       32'd2 :
	       (idReturn_responseAdapter_notEmptyReg ?
		  32'd3 :
		  (setInterface_responseAdapter_notEmptyReg ?
		     32'd4 :
		     32'hFFFFFFFF)) ;
  assign x__h1556 = sglist_responseAdapter_count + 3'd1 ;
  assign x__h1716 = region_responseAdapter_count + 4'd1 ;
  assign x__h2003 = setInterface_responseAdapter_count + 1'd1 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        idRequest_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY 32'd0;
	idRequest_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	idRequest_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY 6'd0;
	idReturn_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY 32'd0;
	idReturn_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	idReturn_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY 6'd0;
	region_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY 416'd0;
	region_responseAdapter_count <= `BSV_ASSIGNMENT_DELAY 4'd0;
	region_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	region_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY 10'd0;
	setInterface_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY 64'd0;
	setInterface_responseAdapter_count <= `BSV_ASSIGNMENT_DELAY 1'd0;
	setInterface_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY
	    1'd0;
	setInterface_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY 7'd0;
	sglist_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY 160'd0;
	sglist_responseAdapter_count <= `BSV_ASSIGNMENT_DELAY 3'd0;
	sglist_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	sglist_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY 9'd0;
      end
    else
      begin
        if (idRequest_responseAdapter_bits_EN)
	  idRequest_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY
	      idRequest_responseAdapter_bits_D_IN;
	if (idRequest_responseAdapter_notEmptyReg_EN)
	  idRequest_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY
	      idRequest_responseAdapter_notEmptyReg_D_IN;
	if (idRequest_responseAdapter_shift_EN)
	  idRequest_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY
	      idRequest_responseAdapter_shift_D_IN;
	if (idReturn_responseAdapter_bits_EN)
	  idReturn_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY
	      idReturn_responseAdapter_bits_D_IN;
	if (idReturn_responseAdapter_notEmptyReg_EN)
	  idReturn_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY
	      idReturn_responseAdapter_notEmptyReg_D_IN;
	if (idReturn_responseAdapter_shift_EN)
	  idReturn_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY
	      idReturn_responseAdapter_shift_D_IN;
	if (region_responseAdapter_bits_EN)
	  region_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY
	      region_responseAdapter_bits_D_IN;
	if (region_responseAdapter_count_EN)
	  region_responseAdapter_count <= `BSV_ASSIGNMENT_DELAY
	      region_responseAdapter_count_D_IN;
	if (region_responseAdapter_notEmptyReg_EN)
	  region_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY
	      region_responseAdapter_notEmptyReg_D_IN;
	if (region_responseAdapter_shift_EN)
	  region_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY
	      region_responseAdapter_shift_D_IN;
	if (setInterface_responseAdapter_bits_EN)
	  setInterface_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY
	      setInterface_responseAdapter_bits_D_IN;
	if (setInterface_responseAdapter_count_EN)
	  setInterface_responseAdapter_count <= `BSV_ASSIGNMENT_DELAY
	      setInterface_responseAdapter_count_D_IN;
	if (setInterface_responseAdapter_notEmptyReg_EN)
	  setInterface_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY
	      setInterface_responseAdapter_notEmptyReg_D_IN;
	if (setInterface_responseAdapter_shift_EN)
	  setInterface_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY
	      setInterface_responseAdapter_shift_D_IN;
	if (sglist_responseAdapter_bits_EN)
	  sglist_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY
	      sglist_responseAdapter_bits_D_IN;
	if (sglist_responseAdapter_count_EN)
	  sglist_responseAdapter_count <= `BSV_ASSIGNMENT_DELAY
	      sglist_responseAdapter_count_D_IN;
	if (sglist_responseAdapter_notEmptyReg_EN)
	  sglist_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY
	      sglist_responseAdapter_notEmptyReg_D_IN;
	if (sglist_responseAdapter_shift_EN)
	  sglist_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY
	      sglist_responseAdapter_shift_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    idRequest_responseAdapter_bits = 32'hAAAAAAAA;
    idRequest_responseAdapter_notEmptyReg = 1'h0;
    idRequest_responseAdapter_shift = 6'h2A;
    idReturn_responseAdapter_bits = 32'hAAAAAAAA;
    idReturn_responseAdapter_notEmptyReg = 1'h0;
    idReturn_responseAdapter_shift = 6'h2A;
    region_responseAdapter_bits =
	416'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    region_responseAdapter_count = 4'hA;
    region_responseAdapter_notEmptyReg = 1'h0;
    region_responseAdapter_shift = 10'h2AA;
    setInterface_responseAdapter_bits = 64'hAAAAAAAAAAAAAAAA;
    setInterface_responseAdapter_count = 1'h0;
    setInterface_responseAdapter_notEmptyReg = 1'h0;
    setInterface_responseAdapter_shift = 7'h2A;
    sglist_responseAdapter_bits =
	160'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    sglist_responseAdapter_count = 3'h2;
    sglist_responseAdapter_notEmptyReg = 1'h0;
    sglist_responseAdapter_shift = 9'h0AA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkMMURequestOutputPipes

