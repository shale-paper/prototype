//
// Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
//
// timestamp removed
//
// BVI format method schedule info:
// schedule ifc_startSwitching  CF ( ifc_startSwitching,
// 				  ifc_printSwStats,
// 				  ifc_start_shoal,
// 				  inverseIfc_startSwitching,
// 				  inverseIfc_printSwStats,
// 				  inverseIfc_start_shoal );
//
// schedule ifc_printSwStats  CF ( ifc_startSwitching,
// 				ifc_printSwStats,
// 				ifc_start_shoal,
// 				inverseIfc_startSwitching,
// 				inverseIfc_printSwStats,
// 				inverseIfc_start_shoal );
//
// schedule ifc_start_shoal  CF ( ifc_startSwitching,
// 			       ifc_printSwStats,
// 			       ifc_start_shoal,
// 			       inverseIfc_startSwitching,
// 			       inverseIfc_printSwStats,
// 			       inverseIfc_start_shoal );
//
// schedule inverseIfc_startSwitching  CF ( ifc_startSwitching,
// 					 ifc_printSwStats,
// 					 ifc_start_shoal,
// 					 inverseIfc_startSwitching,
// 					 inverseIfc_printSwStats,
// 					 inverseIfc_start_shoal );
//
// schedule inverseIfc_printSwStats  CF ( ifc_startSwitching,
// 				       ifc_printSwStats,
// 				       ifc_start_shoal,
// 				       inverseIfc_startSwitching,
// 				       inverseIfc_printSwStats,
// 				       inverseIfc_start_shoal );
//
// schedule inverseIfc_start_shoal  CF ( ifc_startSwitching,
// 				      ifc_printSwStats,
// 				      ifc_start_shoal,
// 				      inverseIfc_startSwitching,
// 				      inverseIfc_printSwStats,
// 				      inverseIfc_start_shoal );
//
//
// Ports:
// Name                         I/O  size props
// RDY_ifc_startSwitching         O     1
// RDY_ifc_printSwStats           O     1
// RDY_ifc_start_shoal            O     1
// inverseIfc_startSwitching      O    72
// RDY_inverseIfc_startSwitching  O     1
// inverseIfc_printSwStats        O    32
// RDY_inverseIfc_printSwStats    O     1
// inverseIfc_start_shoal         O   120
// RDY_inverseIfc_start_shoal     O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// ifc_startSwitching_reconfig_flag  I     8
// ifc_startSwitching_timeslot    I    64
// ifc_start_shoal_idx            I    32
// ifc_start_shoal_rate           I    16
// ifc_start_shoal_timeslot       I     8
// ifc_start_shoal_cycles         I    64
// EN_ifc_startSwitching          I     1
// EN_ifc_printSwStats            I     1
// EN_ifc_start_shoal             I     1
// EN_inverseIfc_startSwitching   I     1
// EN_inverseIfc_printSwStats     I     1
// EN_inverseIfc_start_shoal      I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkShoalMultiSimTopRequestInverterV(CLK,
					  RST_N,

					  ifc_startSwitching_reconfig_flag,
					  ifc_startSwitching_timeslot,
					  EN_ifc_startSwitching,
					  RDY_ifc_startSwitching,

					  EN_ifc_printSwStats,
					  RDY_ifc_printSwStats,

					  ifc_start_shoal_idx,
					  ifc_start_shoal_rate,
					  ifc_start_shoal_timeslot,
					  ifc_start_shoal_cycles,
					  EN_ifc_start_shoal,
					  RDY_ifc_start_shoal,

					  EN_inverseIfc_startSwitching,
					  inverseIfc_startSwitching,
					  RDY_inverseIfc_startSwitching,

					  EN_inverseIfc_printSwStats,
					  inverseIfc_printSwStats,
					  RDY_inverseIfc_printSwStats,

					  EN_inverseIfc_start_shoal,
					  inverseIfc_start_shoal,
					  RDY_inverseIfc_start_shoal);
  input  CLK;
  input  RST_N;

  // action method ifc_startSwitching
  input  [7 : 0] ifc_startSwitching_reconfig_flag;
  input  [63 : 0] ifc_startSwitching_timeslot;
  input  EN_ifc_startSwitching;
  output RDY_ifc_startSwitching;

  // action method ifc_printSwStats
  input  EN_ifc_printSwStats;
  output RDY_ifc_printSwStats;

  // action method ifc_start_shoal
  input  [31 : 0] ifc_start_shoal_idx;
  input  [15 : 0] ifc_start_shoal_rate;
  input  [7 : 0] ifc_start_shoal_timeslot;
  input  [63 : 0] ifc_start_shoal_cycles;
  input  EN_ifc_start_shoal;
  output RDY_ifc_start_shoal;

  // actionvalue method inverseIfc_startSwitching
  input  EN_inverseIfc_startSwitching;
  output [71 : 0] inverseIfc_startSwitching;
  output RDY_inverseIfc_startSwitching;

  // actionvalue method inverseIfc_printSwStats
  input  EN_inverseIfc_printSwStats;
  output [31 : 0] inverseIfc_printSwStats;
  output RDY_inverseIfc_printSwStats;

  // actionvalue method inverseIfc_start_shoal
  input  EN_inverseIfc_start_shoal;
  output [119 : 0] inverseIfc_start_shoal;
  output RDY_inverseIfc_start_shoal;

  // signals for module outputs
  wire [119 : 0] inverseIfc_start_shoal;
  wire [71 : 0] inverseIfc_startSwitching;
  wire [31 : 0] inverseIfc_printSwStats;
  wire RDY_ifc_printSwStats,
       RDY_ifc_startSwitching,
       RDY_ifc_start_shoal,
       RDY_inverseIfc_printSwStats,
       RDY_inverseIfc_startSwitching,
       RDY_inverseIfc_start_shoal;

  // ports of submodule inv_printSwStats_inverter
  wire [31 : 0] inv_printSwStats_inverter_get, inv_printSwStats_inverter_put;
  wire inv_printSwStats_inverter_EN_get,
       inv_printSwStats_inverter_EN_put,
       inv_printSwStats_inverter_RDY_get,
       inv_printSwStats_inverter_RDY_put;

  // ports of submodule inv_startSwitching_inverter
  wire [71 : 0] inv_startSwitching_inverter_get,
		inv_startSwitching_inverter_put;
  wire inv_startSwitching_inverter_EN_get,
       inv_startSwitching_inverter_EN_put,
       inv_startSwitching_inverter_RDY_get,
       inv_startSwitching_inverter_RDY_put;

  // ports of submodule inv_start_shoal_inverter
  wire [119 : 0] inv_start_shoal_inverter_get, inv_start_shoal_inverter_put;
  wire inv_start_shoal_inverter_EN_get,
       inv_start_shoal_inverter_EN_put,
       inv_start_shoal_inverter_RDY_get,
       inv_start_shoal_inverter_RDY_put;

  // action method ifc_startSwitching
  assign RDY_ifc_startSwitching = inv_startSwitching_inverter_RDY_put ;

  // action method ifc_printSwStats
  assign RDY_ifc_printSwStats = inv_printSwStats_inverter_RDY_put ;

  // action method ifc_start_shoal
  assign RDY_ifc_start_shoal = inv_start_shoal_inverter_RDY_put ;

  // actionvalue method inverseIfc_startSwitching
  assign inverseIfc_startSwitching = inv_startSwitching_inverter_get ;
  assign RDY_inverseIfc_startSwitching = inv_startSwitching_inverter_RDY_get ;

  // actionvalue method inverseIfc_printSwStats
  assign inverseIfc_printSwStats = inv_printSwStats_inverter_get ;
  assign RDY_inverseIfc_printSwStats = inv_printSwStats_inverter_RDY_get ;

  // actionvalue method inverseIfc_start_shoal
  assign inverseIfc_start_shoal = inv_start_shoal_inverter_get ;
  assign RDY_inverseIfc_start_shoal = inv_start_shoal_inverter_RDY_get ;

  // submodule inv_printSwStats_inverter
  PutInverter #(.DATA_WIDTH(32'd32)) inv_printSwStats_inverter(.CLK(CLK),
							       .RST(RST_N),
							       .put(inv_printSwStats_inverter_put),
							       .EN_put(inv_printSwStats_inverter_EN_put),
							       .EN_get(inv_printSwStats_inverter_EN_get),
							       .RDY_put(inv_printSwStats_inverter_RDY_put),
							       .get(inv_printSwStats_inverter_get),
							       .RDY_get(inv_printSwStats_inverter_RDY_get));

  // submodule inv_startSwitching_inverter
  PutInverter #(.DATA_WIDTH(32'd72)) inv_startSwitching_inverter(.CLK(CLK),
								 .RST(RST_N),
								 .put(inv_startSwitching_inverter_put),
								 .EN_put(inv_startSwitching_inverter_EN_put),
								 .EN_get(inv_startSwitching_inverter_EN_get),
								 .RDY_put(inv_startSwitching_inverter_RDY_put),
								 .get(inv_startSwitching_inverter_get),
								 .RDY_get(inv_startSwitching_inverter_RDY_get));

  // submodule inv_start_shoal_inverter
  PutInverter #(.DATA_WIDTH(32'd120)) inv_start_shoal_inverter(.CLK(CLK),
							       .RST(RST_N),
							       .put(inv_start_shoal_inverter_put),
							       .EN_put(inv_start_shoal_inverter_EN_put),
							       .EN_get(inv_start_shoal_inverter_EN_get),
							       .RDY_put(inv_start_shoal_inverter_RDY_put),
							       .get(inv_start_shoal_inverter_get),
							       .RDY_get(inv_start_shoal_inverter_RDY_get));

  // submodule inv_printSwStats_inverter
  assign inv_printSwStats_inverter_put = 32'd0 ;
  assign inv_printSwStats_inverter_EN_put = EN_ifc_printSwStats ;
  assign inv_printSwStats_inverter_EN_get = EN_inverseIfc_printSwStats ;

  // submodule inv_startSwitching_inverter
  assign inv_startSwitching_inverter_put =
	     { ifc_startSwitching_reconfig_flag,
	       ifc_startSwitching_timeslot } ;
  assign inv_startSwitching_inverter_EN_put = EN_ifc_startSwitching ;
  assign inv_startSwitching_inverter_EN_get = EN_inverseIfc_startSwitching ;

  // submodule inv_start_shoal_inverter
  assign inv_start_shoal_inverter_put =
	     { ifc_start_shoal_idx,
	       ifc_start_shoal_rate,
	       ifc_start_shoal_timeslot,
	       ifc_start_shoal_cycles } ;
  assign inv_start_shoal_inverter_EN_put = EN_ifc_start_shoal ;
  assign inv_start_shoal_inverter_EN_get = EN_inverseIfc_start_shoal ;
endmodule  // mkShoalMultiSimTopRequestInverterV

